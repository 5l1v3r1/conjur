#!/bin/bash -e

function revert_tag {
  local tag="$1"
  echo "Revert tag: $tag"
  git tag -d $tag
  git push origin :refs/tags/$tag
  echo "Successfully reverted release: $tag"
}

git fetch --tags

version="v$(< VERSION)"
last_release=$(git describe --abbrev=0 --tags)

while true ; do
  case "$1" in
    --revert ) revert_tag $version ; exit 0 ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done


echo "The last release was: $last_release"
echo "The next release will be: $version"

if [ "$version" = "$last_release" ]; then
  echo 'To release, the VERSION file must be incremented to the latest release number.'
  exit 1
fi

if [[ ! $(git status --porcelain) ]]; then
  echo 'Your Git is clean. Please update the VERSION, CHANGELOG.md, and optionally RELEASE_NOTES.md before releasing.  The script will handle commits and pushing.'
  exit 1
fi

# Make sure we have the most recent changes, without destroying local changes.
git stash
git pull --rebase origin master
git stash pop

# Perform a commit, tag, and push. The tag needs to be present before the commit
# to insure Jenkins has what it needs to make a decision about a release.
git commit -am "$version"
git tag -a "$version" -m "$version release"
git push --follow-tags
