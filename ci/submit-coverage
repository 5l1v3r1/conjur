#!/bin/bash

# Script to submit simplecov coverage report to Code Climate.
# Only one report can be submitted per commit, so this can only
# run once pre build, not for each test set.

# The rspec and cucumber reports are all written to repo_root/coverage
# Simplecov handles locking and merging for parallel tests.
# The GKE tests can't mount that dir, so they produce a separate report
# which is merged into repo_root/coverage by this script.

set -eux

dir="coverage"
bin="cc-test-reporter"
report="${dir}/.resultset.json"

if [[ ! -e ${report} ]]; then
    echo "SimpleCov report (${report}) not found"
    ls -laR ${dir}
    return 1
fi

if [[ ! -x ${bin} ]]; then
    echo "cc-test-reporter binary not found, not reporting coverage data to code climate"
    ls -laR ${dir}
    # report is present but reporter binary is not, definitely a bug, exit error.
    return 1
fi

gke_report="ci/authn-k8s/output/simplecov-resultset-authnk8s-gke.json"
if [[ -e "${gke_report}" ]]; then
    echo "GKE Report found"

    # Merge GKE report with the already combined cucumber and rspec results.
    # -s loads input files into an array
    # * merges objects
    jq -s '.[0] * .[1]' "${report}" "${gke_report}" > simplecov_combined
    # This mv is safe as it happens after all the parallel tests are complete.
    mv simplecov_combined "${report}"

    # Simplecov excludes files not within the current repo, it also needs to
    # be able to read all the files referenced within the report. As the reports
    # are generated in containers, the absolute paths contained in the report
    # are not valid outside that container. This sed fixes the paths
    # So they are correct relative to the Jenkins workspace.
    sed -i -E "s+/(opt|src)/conjur-server+${WORKSPACE}+g" "${dir}/.resultset.json"

    # Now need to regenerate the html report, as it was generated before
    # the GKE results were merged in.
    pushd ci/coverage-report-generator
        ./run.sh
    popd
else
    echo "GKE report not found :("
    ls -laR ci/authn-k8s/output
    exit 1
fi

echo "Coverage reports prepared, submitting to CodeClimate."
# vars GIT_COMMIT, GIT_BRANCH & TRID are set by ccCoverage.dockerPrep

./${bin} after-build \
    --coverage-input-type "simplecov"\
    --id "${TRID}" \
    && echo "Successfully Reported Coverage Data"

  set +x