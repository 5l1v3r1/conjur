version: "3"
networks:
  demo:

services:
  pg:
    image: postgres:9.4

  audit:
    image: postgres:9.4

  testdb:
    image: postgres:9.3
    environment:
      POSTGRES_PASSWORD: postgres_secret

  etcd1:
    image: patroni
    networks: [ demo ]
    env_file: docker/etcd.env
    container_name: demo-etcd1
    hostname: etcd1
    command: etcd -name etcd1 -initial-advertise-peer-urls http://etcd1:2380

  etcd2:
    image: patroni
    networks: [ demo ]
    env_file: docker/etcd.env
    container_name: demo-etcd2
    hostname: etcd2
    command: etcd -name etcd2 -initial-advertise-peer-urls http://etcd2:2380

  etcd3:
    image: patroni
    networks: [ demo ]
    env_file: docker/etcd.env
    container_name: demo-etcd3
    hostname: etcd3
    command: etcd -name etcd3 -initial-advertise-peer-urls http://etcd3:2380

  patroni1:
    image: patroni
    networks: [ demo ]
    env_file: docker/patroni.env
    hostname: patroni1
    container_name: demo-patroni1
    environment:
      PATRONI_NAME: patroni1

  patroni2:
    image: patroni
    networks: [ demo ]
    env_file: docker/patroni.env
    hostname: patroni2
    container_name: demo-patroni2
    environment:
      PATRONI_NAME: patroni2

  patroni3:
    image: patroni
    networks: [ demo ]
    env_file: docker/patroni.env
    hostname: patroni3
    container_name: demo-patroni3
    environment:
      PATRONI_NAME: patroni3

  haproxy:
    image: patroni
    networks: [ demo ]
    env_file: docker/patroni.env
    hostname: haproxy
    container_name: demo-haproxy
    ports:
      - "5000:5000"
      - "5001:5001"
    command: haproxy

  conjur:
    build:
      context: ../
      dockerfile: dev/Dockerfile.dev
    image: conjur-dev
    networks: [ demo ]
    environment:
      CONJUR_APPLIANCE_URL: http://localhost:3000
      DATABASE_URL: postgres://postgres@haproxy/postgres
      PGPASSWORD: postgres
      PGPORT: 5000
      CONJUR_ADMIN_PASSWORD: admin
      CONJUR_ACCOUNT: cucumber
      CONJUR_PASSWORD_ALICE: secret
      CONJUR_DATA_KEY:
      RAILS_ENV:
      AUDIT_DATABASE_URL:
    ports:
      - "3000:3000"
      - "1234:1234"
    expose:
      - "3000"
    volumes:
    - ..:/src/conjur-server
    - ../../conjur-policy-parser:/src/conjur-policy-parser
    - authn-local:/run/authn-local
    - ../ci/ldap-certs:/ldap-certs:ro
    - ../ci/authn-oidc/phantomjs:/authn-oidc/phantomjs/scripts
    links:
    - haproxy
    - ldap-server
    - oidc-keycloak:keycloak

  cucumber:
    image: conjur-dev
    entrypoint: sleep
    command: infinity
    environment:
      LDAP_URI: ldap://ldap-server:389
      LDAP_BASE: dc=conjur,dc=net
      CONJUR_APPLIANCE_URL: http://conjur:3000
      DATABASE_URL: postgres://postgres@pg/postgres
      CONJUR_ADMIN_PASSWORD: admin
      CONJUR_DATA_KEY:
      RAILS_ENV:
    volumes:
      - ..:/src/conjur-server
      - authn-local:/run/authn-local
      - ../ci/ldap-certs:/ldap-certs:ro
    links:
      - conjur
      - pg
      - testdb

  client:
    image: cyberark/conjur-cli:5
    entrypoint: sleep
    command: infinity
    environment:
      CONJUR_APPLIANCE_URL: http://conjur:3000
      CONJUR_ACCOUNT: cucumber
      CONJUR_AUTHN_LOGIN: admin
    links:
    - conjur:conjur
    volumes:
    - ..:/src/conjur-server

  ldap-server:
    image: osixia/openldap
    command: --copy-service --loglevel debug
    hostname: ldap-server
    environment:
      LDAP_ORGANISATION: CyberArk
      LDAP_DOMAIN: conjur.net
      LDAP_ADMIN_PASSWORD: ldapsecret
      LDAP_TLS_CA_CRT_FILENAME: "ca-chain.cert.pem"
      LDAP_TLS_CRT_FILENAME: "ldap-server.cert.pem"
      LDAP_TLS_KEY_FILENAME: "ldap-server.key.pem"
      LDAP_TLS_VERIFY_CLIENT: try

    volumes:
      - ./files/authn-ldap/ldap:/container/service/slapd/assets/config/bootstrap/ldif/custom
      - ../ci/ldap-certs:/container/service/slapd/assets/certs:ro

  oidc-keycloak:
    image: jboss/keycloak:4.3.0.Final
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_APP_USER=alice
      - KEYCLOAK_APP_USER_PASSWORD=alice
      - KEYCLOAK_APP_USER_EMAIL=alice@conjur.net
      - KEYCLOAK_SECOND_APP_USER=bob
      - KEYCLOAK_SECOND_APP_USER_PASSWORD=bob
      - KEYCLOAK_SECOND_APP_USER_EMAIL=bob@conjur.net
      - KEYCLOAK_NON_CONJUR_APP_USER=not_in_conjur
      - KEYCLOAK_NON_CONJUR_APP_USER_PASSWORD=not_in_conjur
      - KEYCLOAK_NON_CONJUR_APP_USER_EMAIL=not_in_conjur
      - DB_VENDOR=H2
      - CLIENT_ID=conjurClient
      - REDIRECT_URI=http://locallhost.com/
      - CLIENT_SECRET=d7047915-9029-45b8-9bd6-7ec5c2f75e5b
      - SCOPE=openid,profile,email
    ports:
      - "7777:8080"
    volumes:
      - ../ci/authn-oidc/keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
      - ../ci/authn-oidc/keycloak:/authn-oidc/keycloak/scripts

  oidc-phantomjs:
    environment:
      - KEYCLOAK_APP_USER=alice
      - KEYCLOAK_APP_USER_PASSWORD=alice
      - CLIENT_ID=conjurClient
      - REDIRECT_URI=http://locallhost.com/
      - SCOPE=openid profile email
    image: wernight/phantomjs
    entrypoint: sleep
    command: infinity
    volumes:
      - ../ci/authn-oidc/phantomjs:/authn-oidc/phantomjs/scripts
    links:
      - oidc-keycloak:keycloak

  okta-ldap-agent:
    image: weareenvoy/okta-ldap-agent
    volumes:
      - ./files/okta-ldap-agent/conf:/opt/Okta/OktaLDAPAgent/conf
    entrypoint: sleep
    command: infinity

volumes:
  authn-local:
