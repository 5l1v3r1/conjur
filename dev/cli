#!/bin/bash -e

function print_help() {
  cat << EOF
NAME
    cli - Development tool to simplify working with a Conjur container.

SYNOPSIS
    cli [global options] command [command options] [arguments...]
GLOBAL OPTIONS
    --help                                    - Show this message
COMMANDS
    exec                                      - Steps into the running Conjur container, into a bash shell.

    key                                       - Displays the admin user API key

    policy load <account> <policy/path.yml>   - Loads a conjur policy into the provided account.
EOF
exit
}

function print_exec_help() {
  cat << EOF
NAME
    exec - Steps into the running Conjur container, into a bash shell.

SYNOPSIS
    exec [global options] command [command options] [arguments...]
GLOBAL OPTIONS
    --help                                    - Show this message
COMMANDS
    --authn-oidc    Enables OIDC features
EOF
exit
}

function enable_oidc() {
  echo "Extracting keycloak variables & setting as env variables"

  env_args="$env_args -e CLIENT_ID=$(docker-compose exec oidc-keycloak printenv CLIENT_ID | tr -d '\r')"
  env_args="$env_args -e CLIENT_SECRET=$(docker-compose exec oidc-keycloak printenv CLIENT_SECRET | tr -d '\r')"
  env_args="$env_args -e REDIRECT_URI=$(docker-compose exec oidc-keycloak printenv REDIRECT_URI | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_USER=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_USER | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_PASSWORD=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_PASSWORD | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_APP_USER=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_APP_USER | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_APP_USER_PASSWORD=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_APP_USER_PASSWORD | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_APP_USER_EMAIL=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_APP_USER_EMAIL | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_SECOND_APP_USER=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_SECOND_APP_USER | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_SECOND_APP_USER_PASSWORD=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_SECOND_APP_USER_PASSWORD | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_SECOND_APP_USER_EMAIL=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_SECOND_APP_USER_EMAIL | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_NON_CONJUR_APP_USER=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_NON_CONJUR_APP_USER | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_NON_CONJUR_APP_USER_PASSWORD=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_NON_CONJUR_APP_USER_PASSWORD | tr -d '\r')"
  env_args="$env_args -e KEYCLOAK_NON_CONJUR_APP_USER_EMAIL=$(docker-compose exec oidc-keycloak printenv KEYCLOAK_NON_CONJUR_APP_USER_EMAIL | tr -d '\r')"
  env_args="$env_args -e SCOPE=$(docker-compose exec oidc-keycloak printenv SCOPE | tr -d '\r')"
  env_args="$env_args -e PROVIDER_URI="https://keycloak:8443/auth/realms/master""
  env_args="$env_args -e PROVIDER_INTERNAL_URI="http://keycloak:8080/auth/realms/master/protocol/openid-connect""
  env_args="$env_args -e ID_TOKEN_USER_PROPERTY="preferred_username""
}

unset COMPOSE_PROJECT_NAME

while true ; do
  case "$1" in
    -h | --help ) print_help ; shift ;;
    exec )
      api_key=$(docker-compose exec -T conjur conjurctl role retrieve-key cucumber:user:admin | tr -d '\r')
      env_args="-e CONJUR_AUTHN_API_KEY=$api_key"

      case "$2" in
        -h | --help ) print_exec_help ; shift ;;
        --authn-oidc ) enable_oidc ; shift ;;
        * ) if [ -z "$2" ]; then shift ; else echo "$2 is not a valid option"; exit 1; fi;;
      esac

      docker exec $env_args -it --detach-keys 'ctrl-\' $(docker-compose ps -q conjur) bash
     shift ;;
    policy )
      case "$2" in
        load )
          account="$3"
          policy_file=$4
          docker-compose exec conjur conjurctl policy load "$account" "/src/conjur-server/$policy_file"
          shift 4 ;;
        * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
      esac ;;
    key ) docker-compose exec -T conjur conjurctl role retrieve-key cucumber:user:admin ; shift ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done
